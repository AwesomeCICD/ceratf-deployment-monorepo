version: 2.1

orbs:
  terraform: circleci/terraform@3.2.1
  aws-cli: circleci/aws-cli@3.1.3


parameters:
  run-orb-tests:
    type: boolean
    default: false
  global:
    type: boolean
    default: false
  namer-eks:  
    type: boolean
    default: false
  namer-platforms: 
    type: boolean
    default: false
  emea-eks:  
    type: boolean
    default: false
  emea-platforms: 
    type: boolean
    default: false
  japac-eks:  
    type: boolean
    default: false
  japac-platforms: 
    type: boolean
    default: false

tf_job_defaults: &tf_job_defaults
  context:
    - empty-context #to explicitly generate OIDC token
  #tag: "1.5.1"
  pre-steps:
    - checkout
    - add_ssh_keys:
        fingerprints:
          - "4c:17:59:7f:f3:7d:61:e0:08:6d:b5:b3:cb:8b:ef:c6" # belongs to GH user "ceratf-module-bot", should have read to all ceratf-modules
    - aws-cli/install
    - aws-cli/assume-role-with-web-identity:
        role-arn: "arn:aws:iam::654654271298:role/cera_infra"
        role-session-name: "cci-ceratf-deployment-<< pipeline.number >>"
    # We're doing this because BASH_ENV doesn't work with sh, and sh is the shell on the Terraform docker images
    # TODO: Come up with a better solution
    - run:
        name: Create AWS credentials file
        command: |  
          mkdir -p ~/.aws && \
          source $BASH_ENV && \
          cat > ~/.aws/credentials \<<EOF
          [default]
          aws_access_key_id=${AWS_ACCESS_KEY_ID}
          aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}
          aws_session_token=${AWS_SESSION_TOKEN}
          EOF
    - run:
        name: Install Kubectl
        command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod a+x kubectl
            mv kubectl /usr/local/bin
    - run:
        name: Install Modern TF
        command: |
            cd ~
            curl -LO "https://releases.hashicorp.com/terraform/1.7.0/terraform_1.7.0_linux_amd64.zip"
            unzip terraform_1.7.0*
            chmod a+x terraform
            mv terraform /usr/local/bin

jobs:
  global:
    executor: terraform/default
    steps:
      - checkout
      - run: mkdir workspace
      - terraform/fmt:
          path: ./global
      - terraform/validate:
          path: ./global
      - terraform/apply:
          path: ./global
      - persist_to_workspace:
          root: workspace
          paths: 
            - ./
    
  namer-eks:
    executor: terraform/default
    steps:
      - checkout
      - attach_workspace:
          at: /workspace
      - terraform/fmt:
          path: ./namer-eks
      - terraform/validate:
          path: ./namer-eks
      - terraform/apply:
          path: ./namer-eks
      - persist_to_workspace:
          root: /workspace
          paths:
            - ./
            
  namer-platforms:
    executor: terraform/default
    steps:
      - checkout
      - attach_workspace:
          at: /workspace
      - terraform/fmt:
          path: ./namer-platforms
      - terraform/validate:
          path: ./namer-platforms
      - terraform/apply:
          path: ./namer-platforms
      - persist_to_workspace:
          root: /workspace
          paths:
            - ./
  
  emea-eks:
    executor: terraform/default
    steps:
      - checkout
      - attach_workspace:
          at: /workspace
      - terraform/fmt:
          path: ./emea-eks
      - terraform/validate:
          path: ./emea-eks
      - terraform/apply:
          path: ./emea-eks
      - persist_to_workspace:
          root: /workspace
          paths:
            - ./ 

            
  emea-platforms:
    executor: terraform/default
    steps:
      - checkout
      - attach_workspace:
          at: /workspace
      - terraform/fmt:
          path: ./emea-platforms
      - terraform/validate:
          path: ./emea-platforms
      - terraform/apply:
          path: ./emea-platforms
      - persist_to_workspace:
          root: /workspace
          paths:
            - ./
  
  japac-eks:
    executor: terraform/default
    steps:
      - checkout
      - attach_workspace:
          at: /workspace
      - terraform/fmt:
          path: ./japac-eks
      - terraform/validate:
          path: ./japac-eks
      - terraform/apply:
          path: ./japac-eks
      - persist_to_workspace:
          root: /workspace
          paths:
            - ./
            
  japac-platforms:
    executor: terraform/default
    steps:
      - checkout
      - attach_workspace:
          at: /workspace
      - terraform/fmt:
          path: ./japac-platforms
      - terraform/validate:
          path: ./japac-platforms
      - terraform/apply:
          path: ./japac-platforms
      - persist_to_workspace:
          root: /workspace
          paths:
            - ./

workflows:
  global-workflow:
    when: 
      and: 
       - equal: ["capitaloneaccount", << pipeline.git.branch >>]
       - equal: [true,<<pipeline.parameters.global>>] 
    jobs:
      - global:
          <<: *tf_job_defaults
      - namer-eks:
          requires:
            - global
          <<: *tf_job_defaults
      - namer-platforms:
          requires:
            - namer-eks
          <<: *tf_job_defaults
          context:
            - CERA-INIT-NAMER
      - emea-eks:
          requires:
            - global
          <<: *tf_job_defaults
      - emea-platforms:
          requires:
            - emea-eks
          <<: *tf_job_defaults
          context:
            - CERA-INIT-EMEA
      - japac-eks:
          requires:
            - global
          <<: *tf_job_defaults
      - japac-platforms:
          requires:
            - japac-eks
          <<: *tf_job_defaults
          context:
            - CERA-INIT-JAPAC
  
  eks_layer_namer:
    when: 
      and: 
        - not: << pipeline.parameters.global >>
        - equal: [ true, <<pipeline.parameters.namer-eks>> ]
        - equal: ["capitaloneaccount", << pipeline.git.branch >>]

    jobs:
      - namer-eks:
          <<: *tf_job_defaults
      - namer-platforms:
          requires:
            - namer-eks
          <<: *tf_job_defaults

  platform_layer_namer:
    when:
      and: 
       - not: << pipeline.parameters.global >>
       - not: <<pipeline.parameters.namer-eks>>
       - equal: [ true, <<pipeline.parameters.namer-platforms>> ]
       - equal: ["capitaloneaccount", << pipeline.git.branch >>]

    jobs:
      - namer-platforms:
          <<: *tf_job_defaults
          context:
            - CERA-INIT-NAMER
  
  eks_layer_emea:
    when: 
      and: 
        - not: << pipeline.parameters.global >>
        - equal: [ true, <<pipeline.parameters.emea-eks>> ]
        - equal: ["capitaloneaccount", << pipeline.git.branch >>]

    jobs:
      - emea-eks:
          <<: *tf_job_defaults
      - emea-platforms:
          requires:
            - emea-eks
          <<: *tf_job_defaults

  platform_layer_emea:
    when:
      and: 
       - not: << pipeline.parameters.global >>
       - not: <<pipeline.parameters.emea-eks>>
       - equal: [ true, <<pipeline.parameters.emea-platforms>> ]
       - equal: ["capitaloneaccount", << pipeline.git.branch >>]

    jobs:
      - emea-platforms:
          <<: *tf_job_defaults
          context:
            - CERA-INIT-EMEA
  
  eks_layer_japac:
    when: 
      and: 
        - not: << pipeline.parameters.global >>
        - equal: [ true, <<pipeline.parameters.japac-eks>> ]
        - equal: ["capitaloneaccount", << pipeline.git.branch >>]

    jobs:
      - japac-eks:
          <<: *tf_job_defaults
      - japac-platforms:
          requires:
            - japac-eks
          <<: *tf_job_defaults

  platform_layer_japac:
    when:
      and: 
       - not: << pipeline.parameters.global >>
       - not: <<pipeline.parameters.japac-eks>>
       - equal: [ true, <<pipeline.parameters.japac-platforms>> ]
       - equal: ["capitaloneaccount", << pipeline.git.branch >>]

    jobs:
      - japac-platforms:
          <<: *tf_job_defaults
          context:
            - CERA-INIT-JAPAC
